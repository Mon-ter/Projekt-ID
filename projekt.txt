
drop table if exists marki cascade;
CREATE TABLE marki 
(
	id_marka numeric(3) PRIMARY KEY,
	nazwa varchar(20) NOT NULL,
	nazwa_koncernu varchar(100),

	UNIQUE (nazwa)
);

insert into marki (id_marka, nazwa, nazwa_koncernu) values 
(1,'Audi','Volkswagen AG'),
	(2,'BMW','Bayerische Motoren Werke AG'),
	(3,'Fiat','Fiat Chrysler Automobiles'),
	(4,'Ford','Ford Motor Company'),
	(5,'Honda','Honda Motor Co. Ltd.'),
	(6,'Jeep','Fiat Chrysler Automobiles'),
	(7,'Lexus','Toyota Motor Corporation'),
	(8,'Mazda','Mazda Motor Company'),
	(9,'Mercedes-Benz','Daimler AG'),
	(10,'Opel','Groupe PSA'),
	(11,'Porsche','Volkswagen AG'),
	(12,'Seat','Volkswagen AG'),
	(13,'Skoda','Volkswagen AG'),
	(14,'Subaru','Subaru Corporation'),
	(15,'Suzuki','Suzuki Motor Corporation'),
	(16,'Toyota','Toyota Motor Corporation'),
	(17,'Volkswagen','Volkswagen AG')
	;

drop table if exists modele cascade;
CREATE TABLE modele
(
	id_marka numeric(4) REFERENCES marki,
	id_model numeric(4) PRIMARY KEY,
	model varchar(50) NOT NULL,
	masa_min numeric(6),
	zbiornik_paliwa numeric(3),
	segment char(1) NOT NULL,
	poczatek_produkcji numeric(4),
	koniec_produkcji numeric(4),

	CHECK (poczatek_produkcji<=koniec_produkcji),
	CHECK (segment IN ('A','B','C','D','E','F','S','M','J')),
	UNIQUE (model, id_marka)
);
--nadal produkowane, tylko one moga byc jako nowe w samochodach
insert into modele (id_marka,id_model,model,segment,poczatek_produkcji,
zbiornik_paliwa,masa_min) values 
(2,1,'X1 II','C',2015,51,1470),
(7,10,'IS III','D',2013,66,1550),
(7,11,'GS IV','E',2012,71,1721),
(11,6,'Panamera II','F',2016,75,1945),
(16,13,'Corolla XII','C',2018,50,1295)
	;
--produkcja zakonczona
insert into modele (id_marka,id_model,model,segment,poczatek_produkcji,koniec_produkcji,
zbiornik_paliwa,masa_min) values 
(2,2,'X3 I','D',2003,2010,67,1755),
(2,3,'X4 I','D',2014,2018,67,1815),
(2,4,'X5 II','E',2006,2013,85,2105),
(2,5,'X6 I','E',2007,2014,85,2100),
(12,7,'Toledo III','C',2004,2009,55,1344),
(12,8,'Ibiza I','B',1984,1993,50,840),
(12,9,'Ibiza IV','B',2008,2017,45,974),
(11,12,'Cayman I','C',2005,2012,64,1295)
	;

drop table if exists typ cascade;
CREATE TABLE typ
(
	id_typ numeric(2) PRIMARY KEY,
	nazwa varchar(30) UNIQUE
);

insert into typ(id_typ, nazwa) values
(1,'SUV'),
(2,'crossover'),
(3,'sedan'),
(4,'minivan'),
(5,'fastback'),
(6,'hatchback'),
(7,'kombi'),
(8,'liftback'),
(9,'kabriolet'),
(10,'van'),
(11,'coupe'),
(12,'roadster')
	;

drop table if exists modele_typ cascade;
CREATE TABLE modele_typ
(
	id_typ numeric(2) REFERENCES typ,
	id_model numeric(4) REFERENCES modele
);

insert into modele_typ(id_model,id_typ) values
(1,2),
(2,1),
(3,1),
(4,1),
(5,1),
(6,5),(6,7),
(7,4),
(8,6),
(9,6),(9,7),
(10,3),
(11,3),
(12,11),(12,11),
(13,6),(13,7),(13,3)
	;

drop table if exists wyposazenie cascade;
CREATE TABLE wyposazenie
(
	id_wyposazenie numeric(4) PRIMARY KEY,
	id_marka numeric(3) REFERENCES marki,
	nazwa varchar(50)
);

insert into wyposazenie(id_wyposazenie,id_marka,nazwa) values 
(1,2,'Podstawowe'),
(2,2,'Advantage'),
(3,2,'X Line'),
(4,2,'M Sport'),
(5,2,'Sport Line'),
(6,11,'Panamera 4S'),
(7,11,'4S Diesel'),
(8,11,'Turbo'),
(9,12,'Reference'),
(10,12,'Style'),
(11,12,'Chick'),
(12,12,'Sport'),
(13,7,'Elegance'),
(14,7,'Black'),
(15,7,'F Sport'),
(16,7,'Prestige'),
(17,7,'Elite')
	;

drop table if exists modele_wyposazenie cascade;
CREATE TABLE modele_wyposazenie
(
	id_wyposazenie numeric(4) REFERENCES wyposazenie,
	id_model numeric(4) REFERENCES modele,

	 PRIMARY KEY (id_wyposazenie,id_model)
);

insert into modele_wyposazenie(id_model,id_wyposazenie) values 
(1,1),(1,2),(1,3),(1,4),(1,5),
(2,1),(2,2),(2,3),(2,4),
(3,1),(3,2),(3,3),(3,4),
(4,1),
(5,1),
(6,6),(6,7),(6,8),
(9,9),(9,10),(9,11),(9,12),
(10,14),(10,15),(10,16),(10,13),
(11,17),(11,16),(11,15),(11,13)
	;


drop table if exists rodzaj_napedu cascade;
CREATE TABLE rodzaj_napedu
(
	id_naped numeric(2) PRIMARY KEY,
	nazwa varchar(20) UNIQUE
);

insert into rodzaj_napedu (id_naped,nazwa) values 
(1,'AWD'),
(2,'przedni'),
(3,'tylny')
	;

drop table if exists modele_naped cascade;
CREATE TABLE modele_naped
(
	id_naped numeric(2) REFERENCES rodzaj_napedu,
	id_model numeric(4) REFERENCES modele,

	PRIMARY KEY (id_naped,id_model)
);

insert into modele_naped (id_model,id_naped) values 
(1,1),(1,2),
(2,1),
(3,1),
(4,1),
(5,1),
(6,3),(6,1),
(7,2),
(8,2),
(9,2),
(10,3),
(11,1),(11,3),
(12,3),
(13,2)
	;


drop table if exists kraje cascade;
CREATE TABLE kraje
(
	id_kraju numeric(3) PRIMARY KEY,
	nazwa varchar(50) UNIQUE
);

insert into kraje(id_kraju,nazwa) values 
(1,'Chiny'),
(2,'Niemcy'),
(3,'Holandia'),
(4,'Egipt'),
(5,'Indonezja'),
(6,'Malaje'),
(7,'Rosja'),
(8,'USA'),
(9,'Meksyk'),
(10,'Austria'),
(11,'Hiszpania'),
(12,'Japonia'),
(13,'Finlandia'),
(14,'Anglia'),
(15,'Turcja')
	;

drop table if exists modele_kraje cascade;
CREATE TABLE modele_kraje
(
	id_model numeric(4) REFERENCES modele,
	id_kraju numeric(3) REFERENCES kraje,
	
	PRIMARY KEY (id_model,id_kraju)
);

insert into modele_kraje(id_model,id_kraju) values 
(1,2),(1,3),(1,1),(1,4),(1,5),(1,6),
(2,10),
(3,8),(3,7),(3,4),
(4,8),(4,7),(4,9),
(5,7),(5,8),
(6,2),
(7,11),
(8,11),(8,1),
(9,11),
(10,12),
(11,12),
(12,13),(12,2),
(13,12),(13,14),(13,15)
	;

drop table if exists klienci_salonu cascade;
CREATE TABLE klienci_salonu
(
	id_klienta numeric(6) PRIMARY KEY,
	imie varchar(20),
	nazwisko varchar(30),
	telefon varchar(25),
	email varchar(50),

	CHECK (telefon IS NOT NULL OR email IS NOT NULL)
);

drop table if exists samochody cascade;
CREATE TABLE samochody
(
	id_samochodu numeric(10) PRIMARY KEY,
	id_model numeric(4) REFERENCES modele,
	id_wlasciciel numeric(6) REFERENCES klienci_salonu, 
	id_wyposazenie numeric(4) REFERENCES wyposazenie,
	rok_produkcji numeric(4) NOT NULL,
	cena numeric(10,2),
	nowy char(3) NOT NULL,
	liczba_miejsc numeric(2),
	liczba_drzwi numeric(2),
	id_naped numeric(2) REFERENCES rodzaj_napedu,
	silnik varchar(20) NOT NULL,
	przebieg numeric(10),
	silnik_moc_KM numeric(3),
	silnik_moc_kW numeric(3),
	--pojemnoœæ_silnika numeric(4),
	kolor varchar(20) NOT NULL,
	skrzynia_biegow varchar(50),
	spalanie numeric(3,1),
	bezwypadkowy char(3),
	predkosc_max numeric(3),
	liczba_biegow numeric(2),
	id_typ numeric(2) REFERENCES typ,

	CHECK(nowy='TAK' OR nowy='NIE'),
	CHECK(bezwypadkowy='TAK' OR bezwypadkowy='NIE'),
	CHECK(silnik IN('benzyna','diesel','hybryda','gaz','elektryczny')),
	CHECK(skrzynia_biegow='automatyczna' OR skrzynia_biegow='manualna' OR skrzynia_biegow='CVT'),
	CHECK((nowy='TAK' AND id_wlasciciel is NULL AND bezwypadkowy is NULL) OR (nowy='NIE' AND id_wlasciciel is distinct from NULL AND bezwypadkowy is distinct from NULL)),
	CHECK(silnik_moc_KM is distinct from NULL OR silnik_moc_kW is distinct from NULL)
);

insert into samochody (id_model,id_samochodu,cena,nowy,liczba_drzwi,kolor,id_wyposazenie,
rok_produkcji,liczba_miejsc,id_naped,silnik,spalanie,skrzynia_biegow,liczba_biegow,
silnik_moc_KM,predkosc_max,id_typ) values 
(1,1,159100,'TAK',5,'niebieski',1,2018,5,2,'benzyna',5.9,'manualna',6,192,225,2),
(6,4,515740,'TAK',4,'niebieski',7,2019,4,3,'diesel',6.8,'automatyczna',8,422,285,5)
	;
--bez wyposazenia
insert into samochody (id_model,id_samochodu,cena,nowy,liczba_drzwi,kolor,
rok_produkcji,liczba_miejsc,id_naped,silnik,spalanie,skrzynia_biegow,liczba_biegow,
silnik_moc_KM,predkosc_max,id_typ) values 
(13,5,59600,'TAK',5,'srebrny',2020,5,2,'diesel',3.5,'manualna',6,90,175,7)
	;
--bez liczby biegow
insert into samochody (id_model,id_samochodu,cena,nowy,liczba_drzwi,kolor,id_wyposazenie,
rok_produkcji,liczba_miejsc,id_naped,silnik,spalanie,skrzynia_biegow,
silnik_moc_KM,predkosc_max,id_typ) values 
(10,2,199000,'TAK',4,'czarny',14,2018,5,3,'hybryda',4.2,'CVT',223,200,3),
(11,3,291900,'TAK',4,'srebrny',13,2019,5,1,'hybryda',5.9,'CVT',345,250,3)
	;
--id_wlasciciel to poprzedni wlasciciel ktory sprzedal samochod salonowi

drop table if exists zarzad cascade;
CREATE TABLE zarzad(
	id_kierownika numeric(2) PRIMARY KEY,
	imie varchar (20) NOT NULL,
	nazwisko varchar (30) NOT NULL,
	telefon varchar (25) NOT NULL
);

drop table if exists salon cascade;
CREATE TABLE salon
(
	salon_id numeric(4) PRIMARY KEY,
	miasto varchar(50) NOT NULL,
	kod_pocztowy char(6),
	adres varchar(50),
	telefon varchar(25),
	id_kierownika numeric(2) REFERENCES zarzad,
	tylko_nowe char(3), 
	
	CHECK(tylko_nowe='TAK' OR tylko_nowe='NIE')
);

--dodaæ godziny oraz dni otwarcia salonu

insert into salon (salon_id, miasto) values 
(1,'Krakow'),
	(2,'Poznan'),
	(3,'Warszawa'),
	(4,'Opole'),
	(5,'Kielce');


drop table if exists salon_samochody cascade;
CREATE TABLE salon_samochody
(
	salon_id numeric(4) REFERENCES salon,
	id_samochodu numeric(10) REFERENCES samochody
);



--zarz¹d na razie tworz¹ ka¿dorazowi kierownicy salonów 
--salon_samochody pamiêta informacje o tym w którym salonie jest który samochód
--samochód to jakiœ konkretny pojazd, ka¿dy jest unikalnym obiektem
--modele to ogólna kategoria, ró¿ni siê od tabeli samochod tym ¿e mo¿e byæ wiele samochodów o tym samym id_modelu, ale ka¿dy jest ró¿ny (np. cena)


--kolejnoœæ usuwania jest wa¿na, bo tabele s¹ od siebie zale¿ne
DROP TABLE salon_samochody;
DROP TABLE samochody;
DROP TABLE salon;
DROP TABLE modele;
DROP TABLE marki;
DROP TABLE zarzad;
DROP TABLE klienci_salonu;
DROP TABLE rodzaj_napedu;
DROP TABLE model_naped;

--wypisuje pary marka, model
select nazwa,model from modele left outer join marki using(id_marka) order by 1,2;
--wypisuje modele i dostepne wyposazenia
Select model,w.nazwa from wyposazenie w join modele_wyposazenie using(id_wyposazenie) join modele using(id_model);
--modele i kraje produkcji
Select model,w.nazwa from kraje w join modele_kraje using(id_kraju) join modele using(id_model);
--modele i rodzaj napedu
select model,w.nazwa from rodzaj_napedu w join modele_naped using(id_naped) join modele using(id_model);
--modele i typ nadwozia
select model,w.nazwa from typ w join modele_typ using(id_typ) join modele using(id_model);
--dostepne modele w salonach
select m.nazwa, model,silnik,nowy,kolor,w.nazwa,n.nazwa,rok_produkcji,cena,t.nazwa from samochody left outer join modele using(id_model) left outer join marki m using(id_marka) left outer join wyposazenie w using(id_wyposazenie) left outer join rodzaj_napedu n using(id_naped) left outer join typ t using(id_typ);



