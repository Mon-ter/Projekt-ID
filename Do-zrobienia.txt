
-pozwolić tylko na czterocyfrowe daty produkcji o pierwszej cyfrie 1 lub 2 (obecnie można w modelach i samochodach wpisać rok produkcji np. 123)
-dodać na schemacie nr VIN
-wymyślić ciekawe zapytania i dodać przyciski wykonujące je w aplikacji w sekcji na skróty
-dodać triggery: 
	*samochód może miec tylko taki napęd jaki ma jego model (czyli jeżeli dany model w tabeli modele_naped deklaruje na przednie koła oraz na cztery koła to samochód tego modelu nie może deklarować napędu na tylne koła)
	*podobnie z typem
	*podobnie z wyposażeniem, tylko tutaj jest więcej zależności: samochód może mieć tylko takie wyposażenie jakie deklaruje jego model, ale model może deklarować tylko takie wyposażenie jakie deklaruje jego marka
	*samochod moze miec tylko taką datę produkcji jaką dopuszcza jego model
-dostosować komunikaty błędów
-usuwanie w aplikacji mozliwe jest tylko w pierwotnym wypisaniu, jezeli uzytkownik posortuje dane to usuwanie i tak chce usunac ten wiersz jakby tabela byla nieposortowana


Zrobione:
-dodać w bazie nr VIN
-nadać check-om wykonywanym w bazie nazwy (teraz użytkownikowi ciężko jest się domyśleć czemu jego dane są niedozwolnone w bazie)
-powrót z własnych typów (enum w psql) do varchar w bazie (nie wiem jak zrzutować je do javy, żeby móc dokonywać insert i update, możliwe że mozna by dokonywać tych operacji w inny sposób, ale moim zdaniem prościej będzie powrócić do stanu bazy przed wprowadzeniem tych typów enum)
-dodać być może w aplikacje sortowanie wg kolumny ustalonej przez użytkownika (teraz zawsze sortuje po kluczu głównym wyświetlanej tabeli), technicznie możnaby to zrobić wyświetlając odpowiednie JComboBox (czyli zawierające nazwy kolumn obecnie wyświetlonej tabeli)
-usunąć w aplikacji horizontal_scroll chyba że uda się wprowadzić przewijanie w poziomie (wtedy kolumny tabeli musiały by mieć jakąś własną szerokość, a nie każda kolumna domyślnie jest tej samej szerokości)
